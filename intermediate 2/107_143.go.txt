//143 he uses linux
//144 rest resources, endpoints, statelessness, endpoints,
// http verbs, scalability through seperation of concerns
// flexible data formats. resource based interaction
//145 endpoints: baseURL: https://api.example.com/v1/
// path: /users, /orders, /products
// queryparams: ?status=active&limit=10
//http method get/users, post/orders
//146 net package for http requests.
// pmfm

package main

import (
	"fmt"
	"io"
	"net/http"
)

func main(){

	//new http client
	client := &http.Client{}

	resp, err := client.Get("https://jsonplaceholder.typicode.com/posts/1")
	//resp, err := client.Get("https://swapi.dev/api/people/1")
	if err != nil {
		fmt.Println("Error making request", err)
	}
	defer resp.Body.Close()

	body, err := io.ReadAll(resp.Body)
		if err != nil {
		fmt.Println("Error reading body", err)
	}
	fmt.Println(string(body))
}